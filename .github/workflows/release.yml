name: Release

on:
  push:
    tags:
      - 'v*'  # Triggers on new tags starting with 'v'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions/setup-rust@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-git-

      - name: Build the project
        run: cargo build --release

      - name: Prepare artifacts (Linux and macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          mkdir -p artifacts
          cp target/release/hto artifacts/
          tar -czvf artifacts/hto-${{ runner.os }}.tar.gz -C artifacts hto

      - name: Prepare artifacts (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path artifacts
          Copy-Item target\release\hto.exe artifacts\
          Compress-Archive -Path artifacts\hto.exe -DestinationPath artifacts\hto-windows.zip

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hto-${{ runner.os }}
          path: artifacts/*
          retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create or Update Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          artifacts: artifacts/*
          overwrite: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
